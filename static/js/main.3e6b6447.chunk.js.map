{"version":3,"sources":["Components/Header/Header.js","Components/Body/Menu/Menu.js","Components/Body/Game/Grid/Tile/Tile.js","Components/Body/Game/Grid/Grid.js","Components/Body/Game/Answer/Answer.js","Components/Body/Game/Game.js","Components/Body/About/About.js","Components/Body/Body.js","Components/Footer/Footer.js","Components/App.js","index.js"],"names":["Header","to","Menu","Tile","props","className","onClick","e","selectTile","tile","border","show","num","Grid","useState","grid","setGrid","gridJsx","canAdd","index","outerRow","outerCol","innerRow","Math","floor","innerCol","i","j","useEffect","tempGrid","Array","map","emptySpots","emptyClone","random","length","splice","indexOf","ceil","pos","initGrid","outerRowIndex","outerColIndex","innerRowIndex","innerColIndex","id","Answer","answerJsx","type","selectAnswer","Game","selected","console","log","answer","$","innerHTML","About","Body","path","element","Footer","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e6b6447.chunk.js","sourcesContent":["import './Header.css';\nimport { Link } from 'react-router-dom';\nconst Header = () => {\n\treturn (\n\t\t<header>\n\t\t\t<Link to='/'>\n\t\t\t\t<h3>MENU</h3>\n\t\t\t</Link>\n\t\t\t<Link to='game'>\n\t\t\t\t<h3>GAME</h3>\n\t\t\t</Link>\n\t\t\t<Link to='about'>\n\t\t\t\t<h3>ABOUT</h3>\n\t\t\t</Link>\n\t\t</header>\n\t);\n};\nexport default Header;\n","import './Menu.css';\n\nconst Menu = () => {\n\treturn <div>Menu</div>;\n};\n\nexport default Menu;\n","import './Tile.css';\n\nconst Tile = (props) => {\n\treturn (\n\t\t<div className='tile'>\n\t\t\t<button\n\t\t\t\tonClick={(e) => props.selectTile(e, props.tile)}\n\t\t\t\tclassName={props.border ? 'border-red' : ''}>\n\t\t\t\t{props.tile.show ? props.tile.num : ''}\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default Tile;\n","import './Grid.css';\nimport { useEffect, useState } from 'react';\nimport Tile from './Tile/Tile';\n\nconst Grid = (props) => {\n\tconst [grid, setGrid] = useState([]);\n\tlet gridJsx = [];\n\n\t// determines whether a number is valid to be added\n\t// to the current position\n\t// num -> the number to be added -> int\n\t// index -> 1d index of inner 2d array of num -> int\n\t// outerRow -> index of outer row -> int\n\t// outerCol -> index of outer column -> int\n\t// grid -> 4d grid of objects -> [[[[{}]]]]\n\tconst canAdd = (num, index, outerRow, outerCol, grid) => {\n\t\tconst innerRow = Math.floor(index / 3);\n\t\tconst innerCol = index % 3;\n\n\t\t// if there is a number at current position\n\t\t// return false\n\t\tif (grid[outerRow][outerCol][innerRow][innerCol]) return false;\n\n\t\t// for each outer column of current outer row,\n\t\t// check every inner column of current inner row\n\t\t// if any tile is same as num return false\n\t\t// [-][-][-] [-][-][-] [-][-][-]\n\t\t// [-][x][-] [o][o][o] [o][o][o]\n\t\t// [-][-][-] [-][-][-] [-][-][-]\n\t\t// ...\n\t\tfor (let i = 0; i < 3; i++)\n\t\t\tif (i !== outerCol)\n\t\t\t\tfor (let j = 0; j < 3; j++)\n\t\t\t\t\tif (\n\t\t\t\t\t\tgrid[outerRow][i][innerRow][j] &&\n\t\t\t\t\t\tgrid[outerRow][i][innerRow][j].num === num\n\t\t\t\t\t)\n\t\t\t\t\t\treturn false;\n\n\t\t// for each outer row of current outer column,\n\t\t// check every inner row of current inner column\n\t\t// if any tile is same as num return false\n\t\t// [-][-][-] ...\n\t\t// [-][-][x] ...\n\t\t// [-][-][-] ...\n\t\t//\n\t\t// [-][-][o] ...\n\t\t// [-][-][o] ...\n\t\t// [-][-][o] ...\n\t\t//\n\t\t// [-][-][o] ...\n\t\t// [-][-][o] ...\n\t\t// [-][-][o] ...\n\t\tfor (let i = 0; i < 3; i++)\n\t\t\tif (i !== outerRow)\n\t\t\t\tfor (let j = 0; j < 3; j++)\n\t\t\t\t\tif (\n\t\t\t\t\t\tgrid[i][outerCol][j][innerCol] &&\n\t\t\t\t\t\tgrid[i][outerCol][j][innerCol].num === num\n\t\t\t\t\t)\n\t\t\t\t\t\treturn false;\n\n\t\t// return true by default if any number same as\n\t\t// current not found on right or bottom\n\t\treturn true;\n\t};\n\n\t// Initializes the grid with a 4d array of objects\n\t// Outer grid will be 3x3 array of 2d arrays\n\t// [[][]] [[][]] [[][]]\n\t// [[][]] [[][]] [[][]]\n\t// [[][]] [[][]] [[][]]\n\t// Inner grid will be 3x3 array of objects\n\t// [{}] [{}] [{}]\n\t// [{}] [{}] [{}]\n\t// [{}] [{}] [{}]\n\tconst initGrid = () => {\n\t\t// Create a 4d array of undefined values\n\t\tlet tempGrid = [...Array(3)].map((outerRow) =>\n\t\t\t[...Array(3)].map((outerCol) => [...Array(3)].map((innerRow) => Array(3)))\n\t\t);\n\n\t\t// Fill the 4d array with random values\n\t\t// iterate each outer row\n\t\tfor (let outerRow = 0; outerRow < 3; outerRow++)\n\t\t\t// iterate each outer column\n\t\t\tfor (let outerCol = 0; outerCol < 3; outerCol++) {\n\t\t\t\t// empty tiles of inner 2d array\n\t\t\t\t// to keep track of number 1-9 inside\n\t\t\t\t// inner array\n\t\t\t\tconst emptySpots = [0, 1, 2, 3, 4, 5, 6, 7, 8];\n\t\t\t\t// iterate 1 through 9\n\t\t\t\tfor (let num = 1; num < 10; num++) {\n\t\t\t\t\t// create a clone of inner array\n\t\t\t\t\t// indices to keep track of the index\n\t\t\t\t\t// which a number can be placed\n\t\t\t\t\tconst emptyClone = [...emptySpots];\n\n\t\t\t\t\t// generate a random number from\n\t\t\t\t\t// index clone array\n\t\t\t\t\tlet random = Math.floor(Math.random() * emptyClone.length);\n\n\t\t\t\t\t// if there is an index to check and\n\t\t\t\t\t// the number cannot be added to\n\t\t\t\t\t// random index\n\t\t\t\t\twhile (\n\t\t\t\t\t\temptyClone.length > 0 &&\n\t\t\t\t\t\t!canAdd(num, emptyClone[random], outerRow, outerCol, tempGrid)\n\t\t\t\t\t) {\n\t\t\t\t\t\t// delete the current random\n\t\t\t\t\t\t// index\n\t\t\t\t\t\temptyClone.splice(random, 1);\n\t\t\t\t\t\t// find a new random index\n\t\t\t\t\t\trandom = Math.floor(Math.random() * emptyClone.length);\n\t\t\t\t\t}\n\t\t\t\t\t// if there is no index for current\n\t\t\t\t\t// number to be added on\n\t\t\t\t\tif (emptyClone.length === 0) {\n\t\t\t\t\t\t// reset the 4d array\n\t\t\t\t\t\ttempGrid = [...Array(3)].map((outerRow) =>\n\t\t\t\t\t\t\t[...Array(3)].map((outerCol) =>\n\t\t\t\t\t\t\t\t[...Array(3)].map((innerRow) => Array(3))\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t\t//reset outer row\n\t\t\t\t\t\touterRow = 0;\n\t\t\t\t\t\t//reset the outer column\n\t\t\t\t\t\touterCol = -1;\n\t\t\t\t\t\t// break out of current loop\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// turn 1d index into 2d row and col\n\t\t\t\t\t\tconst innerRow = Math.floor(emptyClone[random] / 3);\n\t\t\t\t\t\tconst innerCol = emptyClone[random] % 3;\n\n\t\t\t\t\t\t// delete the index from empty\n\t\t\t\t\t\t// spots since it will be\n\t\t\t\t\t\t// occupied by a number\n\t\t\t\t\t\temptySpots.splice(emptySpots.indexOf(emptyClone[random]), 1);\n\n\t\t\t\t\t\t// get a random number from 1-100\n\t\t\t\t\t\tconst showPercent = Math.ceil(Math.random() * 100);\n\t\t\t\t\t\t// hide ~60% of the tiles\n\t\t\t\t\t\t// if random is more than 40\n\t\t\t\t\t\t// hide the tile\n\t\t\t\t\t\tlet show = true;\n\t\t\t\t\t\tif (showPercent > 40) show = false;\n\t\t\t\t\t\t// set the number at the position\n\t\t\t\t\t\t// where it should be\n\t\t\t\t\t\ttempGrid[outerRow][outerCol][innerRow][innerCol] = {\n\t\t\t\t\t\t\tnum: num,\n\t\t\t\t\t\t\tshow: show,\n\t\t\t\t\t\t\tpos: (outerRow * 3 + outerCol) * 9 + (innerRow * 3 + innerCol),\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// set the state for component to re-render\n\t\tsetGrid(tempGrid);\n\t};\n\n\t// On initial component render, initialize the grid\n\tuseEffect(() => {\n\t\tinitGrid();\n\t}, []);\n\n\t// If the grid is initialized, map through the 4d\n\t// array, and create html elements to display on\n\t// browser\n\tif (grid)\n\t\tgridJsx = grid.map((outerRow, outerRowIndex) =>\n\t\t\touterRow.map((outerCol, outerColIndex) => (\n\t\t\t\t<div className='inner-grid' key={outerRowIndex * 3 + outerColIndex}>\n\t\t\t\t\t{outerCol.map((innerRow, innerRowIndex) =>\n\t\t\t\t\t\tinnerRow.map((innerCol, innerColIndex) => (\n\t\t\t\t\t\t\t<Tile tile={innerCol} selectTile={props.selectTile} />\n\t\t\t\t\t\t))\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t))\n\t\t);\n\n\treturn <div id='outer-grid'>{gridJsx}</div>;\n};\n\nexport default Grid;\n","import './Answer.css';\n\nconst Answer = (props) => {\n\tconst answerJsx = [...Array(9)].map((e, index) => (\n\t\t<div className='tile' key={index}>\n\t\t\t<button type='submit' onClick={(e) => props.selectAnswer(e, index + 1)}>\n\t\t\t\t{index + 1}\n\t\t\t</button>\n\t\t</div>\n\t));\n\treturn <div id='answers'>{answerJsx}</div>;\n};\n\nexport default Answer;\n","import './Game.css';\nimport Timer from './Timer/Timer';\nimport Grid from './Grid/Grid';\nimport Answer from './Answer/Answer';\nimport $ from 'jquery';\nimport Tile from './Grid/Tile/Tile';\n\nconst Game = () => {\n\tlet selected = null;\n\tconst selectTile = (e, tile) => {\n\t\tif (!tile.show) {\n\t\t\tselected = tile;\n\t\t\tconsole.log(selected);\n\t\t} else selected = null;\n\t};\n\tconst selectAnswer = (e, answer) => {\n\t\tconsole.log(answer, selected);\n\t\tif (answer === selected.num)\n\t\t\t$('.tile')[selected.pos].innerHTML = `<button>${answer}</button>`;\n\t};\n\n\treturn (\n\t\t<div id='game'>\n\t\t\t<h1 id='title'>SUDOKU</h1>\n\t\t\t{/* <Timer /> */}\n\t\t\t<Grid selectTile={selectTile} />\n\t\t\t<Answer selectAnswer={selectAnswer} />\n\t\t</div>\n\t);\n};\n\nexport default Game;\n","import './About.css';\n\nconst About = () => {\n\treturn <div>About</div>;\n};\n\nexport default About;\n","import './Body.css';\nimport { Routes, Route } from 'react-router-dom';\nimport Menu from './Menu/Menu';\nimport Game from './Game/Game';\nimport About from './About/About';\n\nconst Body = () => {\n\treturn (\n\t\t<main>\n\t\t\t<Routes>\n\t\t\t\t<Route path='/' element={<Menu />} />\n\t\t\t\t<Route path='/game' element={<Game />} />\n\t\t\t\t<Route path='/about' element={<About />} />\n\t\t\t</Routes>\n\t\t</main>\n\t);\n};\n\nexport default Body;\n","import './Footer.css';\n\nconst Footer = () => {\n\treturn (\n\t\t<footer>\n\t\t\t<p>© All rights reserved: Phil Aung</p>\n\t\t</footer>\n\t);\n};\n\nexport default Footer;\n","import './App.css';\nimport Header from './Header/Header.js';\nimport Body from './Body/Body';\nimport Footer from './Footer/Footer';\n\nfunction App() {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<Header />\n\t\t\t<Body />\n\t\t\t<Footer />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { HashRouter as Router } from 'react-router-dom';\nimport App from './Components/App';\n\nReactDOM.render(\n\t<Router>\n\t\t<App />\n\t</Router>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}