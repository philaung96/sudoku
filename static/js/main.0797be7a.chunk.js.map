{"version":3,"sources":["Components/Header/Header.js","Components/Body/Menu/Menu.js","Components/Body/Game/Answer/Answer.js","Components/Body/Game/Grid/Grid.js","Components/Body/Game/Game.js","Components/Body/About/About.js","Components/Body/Body.js","Components/Footer/Footer.js","Components/App.js","index.js"],"names":["Header","to","Menu","Answer","answerJsx","Array","map","e","index","className","id","Grid","useState","grid","setGrid","gridJsx","canAdd","num","outerRow","outerCol","innerRow","Math","floor","innerCol","i","j","useEffect","tempGrid","emptySpots","clone","random","length","splice","indexOf","initGrid","outerRowIndex","outerColIndex","innerRowIndex","innerColIndex","Game","About","Body","path","element","Footer","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0797be7a.chunk.js","sourcesContent":["import './Header.css';\nimport { Link } from 'react-router-dom';\nconst Header = () => {\n\treturn (\n\t\t<header>\n\t\t\t<Link to='/'>\n\t\t\t\t<h1>MENU</h1>\n\t\t\t</Link>\n\t\t\t<Link to='game'>\n\t\t\t\t<h1>GAME</h1>\n\t\t\t</Link>\n\t\t\t<Link to='about'>\n\t\t\t\t<h1>ABOUT</h1>\n\t\t\t</Link>\n\t\t</header>\n\t);\n};\nexport default Header;\n","import './Menu.css';\n\nconst Menu = () => {\n\treturn <div>Menu</div>;\n};\n\nexport default Menu;\n","import './Answer.css';\n\nconst Answer = () => {\n\tconst answerJsx = [...Array(9)].map((e, index) => (\n\t\t<div className='tile' key={index}>\n\t\t\t{index + 1}\n\t\t</div>\n\t));\n\treturn <div id='answers'>{answerJsx}</div>;\n};\n\nexport default Answer;\n","import './Grid.css';\nimport { useEffect, useState } from 'react';\n\nconst Grid = () => {\n\tconst [grid, setGrid] = useState([]);\n\tlet gridJsx = [];\n\n\tconst canAdd = (num, index, outerRow, outerCol, grid) => {\n\t\tconst innerRow = Math.floor(index / 3);\n\t\tconst innerCol = index % 3;\n\n\t\tif (grid[outerRow][outerCol][innerRow][innerCol]) return false;\n\n\t\tfor (let i = 0; i < 3; i++)\n\t\t\tif (i !== outerCol)\n\t\t\t\tfor (let j = 0; j < 3; j++)\n\t\t\t\t\tif (grid[outerRow][i][innerRow][j] === num) return false;\n\n\t\tfor (let i = 0; i < 3; i++)\n\t\t\tif (i !== outerRow)\n\t\t\t\tfor (let j = 0; j < 3; j++)\n\t\t\t\t\tif (grid[i][outerCol][j][innerCol] === num) return false;\n\n\t\treturn true;\n\t};\n\n\t// Initializes the grid with a 4d array of objects\n\t// Outer grid will be 3x3 array of 2d arrays\n\t// [[][]] [[][]] [[][]]\n\t// [[][]] [[][]] [[][]]\n\t// [[][]] [[][]] [[][]]\n\t// Inner grid will be 3x3 array of objects\n\t// [{}] [{}] [{}]\n\t// [{}] [{}] [{}]\n\t// [{}] [{}] [{}]\n\tconst initGrid = () => {\n\t\t// Create a 4d array of undefined values\n\t\tlet tempGrid = [...Array(3)].map((outerRow) =>\n\t\t\t[...Array(3)].map((outerCol) => [...Array(3)].map((innerRow) => Array(3)))\n\t\t);\n\n\t\t// Fill the 4d array with random values\n\n\t\tfor (let outerRow = 0; outerRow < 3; outerRow++)\n\t\t\tfor (let outerCol = 0; outerCol < 3; outerCol++) {\n\t\t\t\tconst emptySpots = [0, 1, 2, 3, 4, 5, 6, 7, 8];\n\t\t\t\tfor (let num = 1; num < 10; num++) {\n\t\t\t\t\tconst clone = [...emptySpots];\n\t\t\t\t\t// choose a random index for a\n\t\t\t\t\t// specific number\n\t\t\t\t\tlet random = Math.floor(Math.random() * clone.length);\n\n\t\t\t\t\t// if there is a number at random\n\t\t\t\t\t// index or the number cannot be\n\t\t\t\t\t// added to that index\n\t\t\t\t\twhile (\n\t\t\t\t\t\tclone.length > 0 &&\n\t\t\t\t\t\t!canAdd(num, clone[random], outerRow, outerCol, tempGrid)\n\t\t\t\t\t) {\n\t\t\t\t\t\tclone.splice(random, 1);\n\t\t\t\t\t\t// find a new random index\n\t\t\t\t\t\trandom = Math.floor(Math.random() * clone.length);\n\t\t\t\t\t}\n\t\t\t\t\tif (clone.length === 0) {\n\t\t\t\t\t\ttempGrid = [...Array(3)].map((outerRow) =>\n\t\t\t\t\t\t\t[...Array(3)].map((outerCol) =>\n\t\t\t\t\t\t\t\t[...Array(3)].map((innerRow) => Array(3))\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t\touterRow = 0;\n\t\t\t\t\t\touterCol = -1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// turn 1d index into 2d row and col\n\t\t\t\t\t\tconst innerRow = Math.floor(clone[random] / 3);\n\t\t\t\t\t\tconst innerCol = clone[random] % 3;\n\n\t\t\t\t\t\temptySpots.splice(emptySpots.indexOf(clone[random]), 1);\n\n\t\t\t\t\t\t// set the number at the position\n\t\t\t\t\t\t// where it should be\n\t\t\t\t\t\ttempGrid[outerRow][outerCol][innerRow][innerCol] = num;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// set the state for component to re-render\n\t\tsetGrid(tempGrid);\n\t};\n\n\t// On initial component render, initialize the grid\n\tuseEffect(() => {\n\t\tinitGrid();\n\t}, []);\n\n\t// If the grid is initialized, map through the 4d\n\t// array, and create html elements to display on\n\t// browser\n\tif (grid)\n\t\tgridJsx = grid.map((outerRow, outerRowIndex) =>\n\t\t\touterRow.map((outerCol, outerColIndex) => (\n\t\t\t\t<div className='inner-grid' key={outerRowIndex * 3 + outerColIndex}>\n\t\t\t\t\t{outerCol.map((innerRow, innerRowIndex) =>\n\t\t\t\t\t\tinnerRow.map((innerCol, innerColIndex) => (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName='tile'\n\t\t\t\t\t\t\t\tkey={\n\t\t\t\t\t\t\t\t\t(outerRowIndex * 3 + outerColIndex) * 9 +\n\t\t\t\t\t\t\t\t\t(innerRowIndex * 3 + innerColIndex)\n\t\t\t\t\t\t\t\t}>\n\t\t\t\t\t\t\t\t<p>{innerCol}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t))\n\t\t);\n\n\treturn <div id='outer-grid'>{gridJsx}</div>;\n};\n\nexport default Grid;\n","import Answer from './Answer/Answer';\nimport './Game.css';\nimport Grid from './Grid/Grid';\n\nconst Game = () => {\n\treturn (\n\t\t<div id='game'>\n\t\t\t<Grid />\n\t\t\t<Answer />\n\t\t</div>\n\t);\n};\n\nexport default Game;\n","import './About.css';\n\nconst About = () => {\n\treturn <div>About</div>;\n};\n\nexport default About;\n","import './Body.css';\nimport { Routes, Route } from 'react-router-dom';\nimport Menu from './Menu/Menu';\nimport Game from './Game/Game';\nimport About from './About/About';\n\nconst Body = () => {\n\treturn (\n\t\t<div>\n\t\t\t<Routes>\n\t\t\t\t<Route path='/' element={<Menu />} />\n\t\t\t\t<Route path='/game' element={<Game />} />\n\t\t\t\t<Route path='/about' element={<About />} />\n\t\t\t</Routes>\n\t\t</div>\n\t);\n};\n\nexport default Body;\n","import './Footer.css';\n\nconst Footer = () => {\n\treturn (\n\t\t<footer>\n\t\t\t<p>Â© All rights reserved: Phil Aung</p>\n\t\t</footer>\n\t);\n};\n\nexport default Footer;\n","import './App.css';\nimport Header from './Header/Header.js';\nimport Body from './Body/Body';\nimport Footer from './Footer/Footer';\n\nfunction App() {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<Header />\n\t\t\t<Body />\n\t\t\t<Footer />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { HashRouter as Router } from 'react-router-dom';\nimport App from './Components/App';\n\nReactDOM.render(\n\t<Router>\n\t\t<App />\n\t</Router>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}